import json
import logging


import aiogram.utils.markdown as md
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.types import ParseMode, KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils import executor

from api.WeatherApi import getWeather
from states.WeatherState import WeatherState

from keyboards import GREET_KEYBOARD, weather_start_message, news_start_message, notes_start_message, WEATHER_DATES

import matplotlib.pyplot as plt

# x_values = ['1', '2', '3', '4', '5']
# y_values = [3, 10, 20, 8, 6]
#
# # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫
# plt.plot(x_values, y_values, color='black')
#
# # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –º–µ—Ç–∫–∏ –æ—Å–µ–π
# plt.title("–î–∏–Ω–∞–º–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")
# plt.xlabel("temp ¬∞C")
# plt.ylabel("–î–Ω–∏")
#
# # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –≤ —Ñ–∞–π–ª
# plt.savefig('my_plot.png')

logging.basicConfig(level=logging.INFO)

API_TOKEN = '5769100992:AAF7kcWJyc15w7Y32_JKK6LfbJ-Ew1-uexc'

bot = Bot(token=API_TOKEN)

storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

@dp.message_handler(commands='start')
async def cmd_start(message: types.Message):
    markup = types.ReplyKeyboardRemove()

    await bot.send_message(

        message.chat.id,

        md.text(

            md.text('üëã –ü—Ä–∏–≤–µ—Ç!'),

            md.text(
                'üòé –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –¥–µ–ª–∞—Ö.'),

            md.text('üå°Ô∏è –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –¥–Ω–µ–π?', md.bold(
                '–ü—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏ –≥–æ—Ä–æ–¥ –∏ –¥–Ω–∏. –Ø –ø–æ—Å–æ–≤–µ—Ç—É—é —Ç–µ–±–µ –∫–∞–∫ –æ–¥–µ—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±–æ–ª–µ—Ç—å'), '!'),

            md.text('üì∞ –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –≤ –º–∏—Ä–µ –ø–æ–∫–∞ —Ç—ã —Å–ø–∞–ª?', md.bold(
                '–Ø –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏'), '!'),

            md.text('üç∫ –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞–±—ã–≤–∞–µ—à—å —á—Ç–æ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ?', md.bold(
                '–Ø –º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–≤–æ–∏ –∑–∞–º–µ—Ç–∫–∏ –∏ —Ç—ã —Ç–æ—á–Ω–æ –Ω–µ –∑–∞–±—É–¥–µ—à—å –∫–∞–∫–æ–µ –ø–∏–≤–æ —Ç–µ–±—è –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –∫—É–ø–∏—Ç—å –Ω–∞ —Å—É–±–±–æ—Ç–Ω—é—é –≤–µ—á–µ—Ä–∏–Ω–∫—É'), '!'),

            md.text('ü§ü', md.bold('–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ, –ø–æ—ç—Ç–æ–º—É –Ω–µ –∑–∞–±–ª—É–¥–∏—à—å—Å—è'), '.', md.bold('–£–¥–∞—á–∏, –¥—Ä—É–≥'), '!'),

            sep='\n\n',
        ),

        reply_markup = GREET_KEYBOARD(),
        parse_mode = ParseMode.MARKDOWN,
    )

@dp.message_handler(text=[weather_start_message, news_start_message, notes_start_message])
async def process_commands(message: types.Message):
    messageText = message.text;

    if message.text == weather_start_message:
        await WeatherState.city.set()
        await bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥")

@dp.message_handler(state=WeatherState.city)
async def process_city(message: types.Message, state: FSMContext):
    messageText = message.text

    await state.update_data(city=messageText)
    await WeatherState.next()

    await message.reply("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –ø–æ–≥–æ–¥—ã?", reply_markup=WEATHER_DATES())

@dp.message_handler(lambda message: message.text.isdigit(), state=WeatherState.days)
async def process_city(message: types.Message, state: FSMContext):
    messageText = message.text
    await state.update_data(days=int(messageText))
    weatherInfo = await state.get_data()


    res = await getWeather(weatherInfo.get('city'))

    list = res['list'][0]

    mainStr = list['main']
    temp = mainStr['temp']
    feelsLike = mainStr['feels_like']

    weather = list['weather'][0]
    weatherDescription = weather['description']

    # TODO –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω—é –≥—Ä–∞—Ñ–∏–∫–∞
    # await bot.send_photo(
    #     message.chat.id,
    #     photo=open("my_plot.png", 'rb')
    # )

    await bot.send_message(
        message.chat.id,
        md.text(
            md.text(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç {temp}, –Ω–æ {weatherDescription}, –ø–æ—ç—Ç–æ–º—É –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feelsLike}"),
            sep='\n',
        ),
        parse_mode=ParseMode.MARKDOWN,
    )


@dp.message_handler(lambda message: not message.text.isdigit(), state=WeatherState.days)
async def process_days(message: types.Message):
    return await message.reply("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –¥—Ä—É–≥")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
